<!-- Breadcrumb-->
<div class="breadcrumb-holder">
  <div class="container-fluid">
    <ul class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Anasayfa</a></li>
      <li class="breadcrumb-item active">Ürün Ekle</li>
    </ul>
  </div>
</div>
<section class="forms">
  <div class="container-fluid">
    <!-- Page Header-->
    <header> 
      <h1 class="h3 display">Ürün Klasörü Ekle</h1>
    </header>

    <% if (status == "no") { %>
    <% } else if (status == "ok") { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <strong>Ürün klasörü oluşturuldu.</strong>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <% } else { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%- status %>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <% } %>

    <div class="row">
      <div class="col-lg-12">
        <div class="card">
          <div class="card-header d-flex align-items-center">
            <h4>Ürün Klasörü Oluşturma Formu</h4>
          </div>
          <div class="card-body">
            <form class="form-horizontal" action="/dashboard/urunEkle" method="POST">

              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Kategori</label>
                <div class="col-sm-10">
                  <select class="custom-select" id="product_category" name="product_category" required>
                    <option value="">Ürün Kategorisi seçin</option>
                  <% prodCatList.forEach(prodCat => { %>
                    <option value="<%= prodCat.uid %>"><%= prodCat.name %></option>
                  <% }); %>
                  </select>
                </div>
              </div>
              <div class="line"></div>

              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Ürün Adı</label>
                <div class="col-sm-10">
                  <input type="text" class="form-control" id="folder_name" name="folder_name" required>
                </div>
              </div>
              <div class="line"></div>

              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Marka</label>
                <div class="col-sm-10">
                  <select class="custom-select" id="brandName" name="brandName" required>
                    <option value="">Marka seçin</option>
                  <% brandList.forEach(brand => { %>
                    <option value="<%= brand.brandName %>"><%= brand.brandName %></option>
                  <% }); %>
                  </select>
                </div>
              </div>
              <div class="line"></div>
              
              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Yalnızca Doktorlar görebilir</label>
                <div class="col-sm-1 pull-md-11" id="chbx">
                  <input type="checkbox" class="form-control" id="folder_permission" name="folder_permission" hidden>
                  <i class="fa fa-square-o" id="chk1"></i>
                  <i class="fa fa-check-square-o" id="chk2" hidden="hidden"></i>
                </div>
              </div>
              <div class="line"></div>
              
            <div hidden>
              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Açıklama Başlığı</label>
                <div class="col-sm-10">
                  <input type="text" class="form-control" id="folder_title" name="folder_title">
                </div>
              </div>
              <div class="line"></div>
            </div>
              
              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Açıklama</label>
                <div class="col-sm-10">
                  <textarea class="form-control" id="folder_description" name="folder_description" rows="5" required></textarea>
                </div>
              </div>
              <div class="line"></div>
              
              <div class="form-group row">
                <!-- label class="col-sm-2 form-control-label">Klasör Adı</label -->
                <!-- <div class="col-sm-12 alert alert-success alert-dismissible fade show" role="alert" id="successAlert" hidden>
                  <strong>Klasör oluşturuldu.<br>Dosya eklendi.</strong>
                </div>
                <div class="col-sm-12 alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert" hidden >
                  <strong>Dosya eklenirken bir hata oluştu!</strong>
                </div> -->
                <label class="col-sm-2 form-control-label">Logo <p id="logoProgressPercent"></p></label>
                <div class="col-sm-10">
                <div class="col-sm-10">
                  <input type="text" class="form-control" id="product_logo_url" name="product_logo_url" hidden>
                  <input type="file" value="upload" id="logoButton" title="Logo Seç" accept="image/*"/>
                </div>
                  <div class="col-sm-2">
                    <img id="logoPreview" src="http://via.placeholder.com/100x100" alt="" height="100px">
                  </div>
                </div>
              </div>

              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Doktor</label>
                <div class="col-sm-1 pull-md-11" id="drchbx">
                  <input type="checkbox" class="form-control" id="is_doctor" name="is_doctor" hidden>
                  <i class="fa fa-square-o" id="drchk1"></i>
                  <i class="fa fa-check-square-o" id="drchk2" hidden="hidden"></i>
                </div>
              </div>
              <div class="line"></div>

              <div class="form-group row">
                <label class="col-sm-2 form-control-label">Doktor Bul Linki</label>
                <div class="col-sm-10">
                  <input type="text" class="form-control" id="doctor_url" name="doctor_url" required>
                </div>
              </div>
              <div class="line"></div>

              <div class="form-group row">
                <!-- label class="col-sm-2 form-control-label">Klasör Adı</label -->
                <div class="col-sm-12 alert alert-success alert-dismissible fade show" role="alert" id="successAlert" hidden>
                  <strong>Klasör oluşturuldu.<br>Dosya eklendi.</strong>
                </div>
                <div class="col-sm-12 alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert" hidden >
                  <strong>Dosya eklenirken bir hata oluştu!</strong>
                </div>
                <div class="col-sm-12">
                    <input class="col-sm-12" type="file" value="upload" id="fileButton" />
                </div>
              </div>
              <div class="form-group row">
                <div class="col-sm-1 text-right">
                  <p id="progressPercent">%0</p>
                </div>
                <div class="col-sm-11">
                  <progress value="0" max="100" id="uploader">%0</progress>
                </div>
              </div>
              
            </form>
          </div>
        </div>
      </div>

    </div>
  </div>
</section>


<script src="https://www.gstatic.com/firebasejs/4.10.1/firebase.js"></script>
<script>
  // Initialize Firebase
  var config = {
  apiKey: "AIzaSyDpD2xg33L8GRxM3ym2xRqO52YiIEPo1Ic",
  authDomain: "mezoklinik-af086.firebaseapp.com",
  databaseURL: "https://mezoklinik-af086.firebaseio.com",
  projectId: "mezoklinik-af086",
  storageBucket: "mezoklinik-af086.appspot.com",
  messagingSenderId: "905154803992",
  appId: "1:905154803992:web:542b44d48aa1f4e822066d",
  measurementId: "G-T43PZWT06K"
  };
  firebase.initializeApp(config);

  var product_category = document.getElementById('product_category');

  // Get a reference to the database service
  var database = firebase.database();

  // token ile kimlik doğrulama
  firebase.auth().signInWithCustomToken("<%= customToken %>")
      .catch(function(error) {
        console.log("Hata! Kod: " + errorCode + "\nHata: " + errorMessage);
      });

    // seçilen product_category iznine göre checkbox davranışı ayarlanıyor >>>
    var pcList = [];
    document.getElementById("chbx").addEventListener('click', function(e){
      if ((pcList.length == 1 && pcList[0].permission) || (pcList.length == 0)){
        var c1 = document.getElementById("chk1").getAttribute("hidden");
        var c2 = document.getElementById("chk2").getAttribute("hidden");
        if (c2 != null) {
          document.getElementById("chk1").setAttribute("hidden", "hidden");
          document.getElementById("chk2").removeAttribute("hidden");
          document.getElementById("folder_permission").setAttribute("checked","checked");
        }
        if (c1 != null) {
          document.getElementById("chk1").removeAttribute("hidden");
          document.getElementById("chk2").setAttribute("hidden", "hidden");
          document.getElementById("folder_permission").removeAttribute("checked");
        }
      }
    });

    document.getElementById("drchbx").addEventListener('click', function(e){
      // if ((pcList.length == 1 && pcList[0].permission) || (pcList.length == 0)){
        var c1 = document.getElementById("drchk1").getAttribute("hidden");
        var c2 = document.getElementById("drchk2").getAttribute("hidden");
        if (c2 != null) {
          document.getElementById("drchk1").setAttribute("hidden", "hidden");
          document.getElementById("drchk2").removeAttribute("hidden");
          document.getElementById("is_doctor").setAttribute("checked","checked");
        }
        if (c1 != null) {
          document.getElementById("drchk1").removeAttribute("hidden");
          document.getElementById("drchk2").setAttribute("hidden", "hidden");
          document.getElementById("is_doctor").removeAttribute("checked");
        }
      // }
    });
    
    product_category.addEventListener('change', function(e){
          pcList = [];
          document.getElementById("folder_permission").removeAttribute("checked");
          document.getElementById("chk1").removeAttribute("hidden");
          document.getElementById("chk2").setAttribute("hidden", "hidden");
      if (e.target.value != ""){
        //seçilen product_category elemanına göre doktor izni seçiliyor
        database.ref("menu/productCategory")
        .orderByChild("uid")
        .equalTo(e.target.value)
        .once('value').then(function(snapshot) {
          snapshot.forEach( snap => {
            pcList.push(snap.val());
          });
          if (pcList.length == 1){
            if (!pcList[0].permission){ //yalnız doktorlar görebilir
              document.getElementById("folder_permission").setAttribute("checked", "");
              document.getElementById("chk1").setAttribute("hidden", "hidden");
              document.getElementById("chk2").removeAttribute("hidden");
            }else{
              // document.getElementById("file_permission").setAttribute("checked", "false");
              // document.getElementById("file_permission").removeAttribute("checked");
            }
          }
        });
      }
    });
    // <<< seçilen file_category iznine göre checkbox davranışı ayarlanıyor (bitti)


    ///////////////// Upload /////////////////////////
    // Get elements
    var uploader = document.getElementById('uploader');
    var fileButton = document.getElementById('fileButton');
    var logoButton = document.getElementById('logoButton');

    // Product image upload
    fileButton.addEventListener('change', function(e) {
        // Get file
        var file = e.target.files[0];
        var folder_name = document.getElementById("folder_name");
        var brandName = document.getElementById("brandName");
        var folder_title = document.getElementById("folder_title");
        var folder_description = document.getElementById("folder_description");
        var folderPermission = true;
        if (document.getElementById("folder_permission").checked  == true){
          folderPermission = false;
        }
        var is_doctor = false;
        if (document.getElementById("is_doctor").checked  == true){
          is_doctor = true;
        }
        var doctor_url = document.getElementById("doctor_url");
        var product_logo_url = document.getElementById("product_logo_url");

        // Create a storage ref
        // if (product_category.value != "" && folder_name.value != "" && folder_title.value != "" && folder_description.value != ""){
        if (product_category.value != "" && folder_name.value != "" && brandName.value != "" 
            && folder_description.value != "" && doctor_url.value != ""){

            document.getElementById("successAlert").setAttribute("hidden", "hidden");
            document.getElementById("errorAlert").setAttribute("hidden", "hidden");
          
            var date = new Date().getTime();
            var storageRef = firebase.storage().ref("productFiles/" + product_category.value + '/' + date + file.name);

            // Upload file
            var task = storageRef.put(file);

            // Update progress bar
            task.on('state_changed',
                function progress(snapshot) {
                    var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                    uploader.value = percentage;
                    document.getElementById("progressPercent").innerHTML = "%" + Math.floor(percentage);
                },
                function error(err) {
                  // alert error
                  document.getElementById("errorAlert").removeAttribute("hidden");
                },
                function complete() {
                  // write db
                  //yasak karakterler temizleniyor.
                  var uidName = file.name;
                  uidName = uidName.replace(/\./gi, "").replace(/\#/gi, "").replace(/\$/gi, "").replace(/\[/gi, "").replace(/\]/gi, "").replace(/\ /gi, "")
                  .replace(/\\/gi, "").replace(/\//gi, "").replace(/\"/gi, "").replace(/\'/gi, "");
                  uidFolderName = folder_name.value.replace(/\./gi, "").replace(/\#/gi, "").replace(/\$/gi, "").replace(/\[/gi, "").replace(/\]/gi, "").replace(/\ /gi, "")
                  .replace(/\\/gi, "").replace(/\//gi, "").replace(/\"/gi, "").replace(/\'/gi, "");

                  var downloadURL = task.snapshot.downloadURL;

                  //db'de folders altına ekleniyor
                  firebase.database().ref("folders/productCategory/" + product_category.value + "/product/" + date + uidFolderName ).set({
                    name: folder_name.value,
                    brandName: brandName.value,
                    title: folder_title.value,
                    description: folder_description.value,
                    permission: folderPermission,
                    is_doctor: is_doctor,
                    doctor_url: doctor_url.value,
                    product_logo_url: product_logo_url.value,
                    download_url: downloadURL,
                    type: file.type,
                    storage_name: date + file.name,
                    uid: date + uidFolderName
                  }, function(error) {
                    if (error) {
                        console.log("Realtime DB set hatası: (folders) Ürün Klasörü eklenemedi. " + error);
                        
                        //folders Hata

                    } else { //folders altına kayıt başarılı
                        
                        //db'de menu altına ekleniyor
                        firebase.database().ref("menu/productCategory/" + product_category.value + "/product/" + date + uidFolderName ).set({
                          name: folder_name.value,
                          brandName: brandName.value,
                          title: folder_title.value,
                          description: folder_description.value,
                          permission: folderPermission,
                          is_doctor: is_doctor,
                          doctor_url: doctor_url.value,
                          product_logo_url: product_logo_url.value,
                          download_url: downloadURL,
                          type: file.type,
                          storage_name: date + file.name,
                          uid: date + uidFolderName
                        }, function(error) {
                            if (error) {
                                console.log("Realtime DB set hatası: (menu) Ürün Klasörü eklenemedi. " + error);
                                // menu Hata, folders kaydı rollback yapılacak.
                            } else { //menu altına kayıt başarılı
                              // alert success
                              document.getElementById("successAlert").removeAttribute("hidden");
                            }
                          });
                    }
                  });

                  
                  
                }
            );
        } else {
          fileButton.value = null;
            alert("Lütfen tüm alanları doldurun.");
        }
    });

    //logo upload
    logoButton.addEventListener('change', function(e) {
        // Get file
        var file = e.target.files[0];
        if (product_category.value != ""){
          
            var date = new Date().getTime();
            var storageRef = firebase.storage().ref("productFiles/" + product_category.value + '/logo/' + date + file.name);

            // Upload file
            var task = storageRef.put(file);

            // Update progress bar
            task.on('state_changed',
                function progress(snapshot) {
                    var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                    // uploader.value = percentage;
                    document.getElementById("logoProgressPercent").innerHTML = "%" + Math.floor(percentage);
                },
                function error(err) {
                  // alert error
                    document.getElementById("logoProgressPercent").innerHTML = "Hata! Tekrar deneyin";
                  // document.getElementById("errorAlert").removeAttribute("hidden");
                },
                function complete() {
                  var downloadURL = task.snapshot.downloadURL;
                  document.getElementById("product_logo_url").value = downloadURL;
                  document.getElementById("logoPreview").src = downloadURL;

                }
            );
        } else {
          logoButton.value = null;
            alert("Logo eklemeden önce ürün kategorisi seçmelisiniz!");
        }
    });
    ///////////////// Upload /////////////////////////
    
</script>